#include <windows.h>  // for MS Windows
#include <GL/glut.h>  // GLUT, include glu.h and gl.h
#include <math.h>

/* Handler for window-repaint event. Call back when the window first appears and
whenever the window needs to be re-painted. */
void display() {
	glClearColor(1.0f, 1.0f, 1.0f, 1.0f); // Set background color to black and opaque
	glClear(GL_COLOR_BUFFER_BIT);         // Clear the color buffer (background)
	//glLineWidth(7.5);
     //violate
	glBegin(GL_QUADS);// Draw a Red 1x1 Square centered at origin
	glColor3ub(216, 56, 22 );
	  glVertex2f(5,0);
	     glVertex2f(6,0);
	      glVertex2f(6,4);
	       glVertex2f(5,4);

	      glEnd();
    //navy blue


    glBegin(GL_TRIANGLES);// Draw a Red 1x1 Square centered at origin
	glColor3ub(22, 216, 54 );
	  glVertex2f(3.0f,4.0f);
	     glVertex2f(8.0f,4.0f);
	      glVertex2f(5.5f,7.0f);


	      glEnd();


	        glBegin(GL_TRIANGLES);// Draw a Red 1x1 Square centered at origin
	glColor3ub(22, 216, 54 );
	  glVertex2f(3.0f,6.0f);
	     glVertex2f(8.0f,6.0f);
	      glVertex2f(5.5f,8.0f);


	      glEnd();


	glFlush();  // Render now
}

/* Main function: GLUT runs as a console application starting at main()  */
int main(int argc, char** argv) {
	glutInit(&argc, argv);                 // Initialize GLUT
	glutCreateWindow("OpenGL Setup Test");
	glOrtho(-30,30,-30,30,-30,30);
	//gluOrtho2D(-0.1,0.7,-0.1,0.3); // Create a window with the given title
	glutInitWindowSize(500, 500);// Set the window's initial width & height
	glutDisplayFunc(display);// Register display callback handler for window re-paint
	glutMainLoop();           // Enter the event-processing loop
	return 0;
}
